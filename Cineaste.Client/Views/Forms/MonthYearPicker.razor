@inherits CineasteComponent

<div class="month-year-container @this.Class">
    <div>
        @if (!String.IsNullOrWhiteSpace(this.MonthText))
        {
            <label class="label" for="@($"{this.Id}-month")">@this.Loc[this.MonthText]</label>
        }

        <FluentSelect Id="@($"{this.Id}-month")" Items="@this.Months" SelectedOption="@this.Month"
                      SelectedOptionChanged="@((int month) => this.OnMonthChanged(month))"
                      OptionText="@(m => this.Loc[$"Month.{m}"])" Class="select form-field" />
    </div>

    <div>
        <FluentNumberField Value="@this.Year" ValueExpression="@(() => this.Year)" Class="form-field"
                           ValueChanged="@((int year) => this.OnYearChanged(year))">
            @this.Loc[this.YearText]
        </FluentNumberField>
        <ErrorPresenter ErrorCode="@this.YearErrorCode" Trigger="@this.Year" />
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = String.Empty;

    [Parameter]
    public int Month { get; set; }

    [Parameter]
    public EventCallback<int> MonthChanged { get; set; }

    [Parameter]
    public string MonthText { get; set; } = String.Empty;

    [Parameter]
    public int Year { get; set; }

    [Parameter]
    public EventCallback<int> YearChanged { get; set; }

    [Parameter]
    public string YearText { get; set; } = String.Empty;

    [Parameter]
    public string YearErrorCode { get; set; } = String.Empty;

    [Parameter]
    public EventCallback Changed { get; set; }

    [Parameter]
    public string Class { get; set; } = String.Empty;

    private ImmutableArray<int> Months { get; } = Enumerable.Range(1, 12).ToImmutableArray();

    private async Task OnMonthChanged(int month)
    {
        await this.MonthChanged.InvokeAsync(month);
        await this.Changed.InvokeAsync();
    }

    private async Task OnYearChanged(int month)
    {
        await this.YearChanged.InvokeAsync(month);
        await this.Changed.InvokeAsync();
    }
}
