@inherits CineasteForm<SpecialEpisodeFormModel, SpecialEpisodeRequest, SpecialEpisodeModel, SeriesFormState>

<FormParamsProvider For="this">
    <div class="container list-sidebar">
        <div class="form-header">
            <MudIconButton
                Icon="@Icons.Material.Filled.KeyboardArrowUp"
                Size="Size.Small"
                @onclick="this.GoToSeries"
                aria-label="@this.Loc["AriaLabel.Up"]"
            />

            <div class="go-to-other-components-container">
                <MudIconButton
                    Icon="@Icons.Material.Filled.KeyboardArrowLeft"
                    Size="Size.Small"
                    Class="@(this.FormModel.IsFirst ? "invisible" : null)"
                    @onclick="this.OnGoToPreviousComponent"
                    aria-hidden="@this.FormModel.IsFirst"
                    aria-label="@this.Loc["AriaLabel.Previous"]"
                />

                <MudIconButton
                    Icon="@Icons.Material.Filled.KeyboardArrowRight"
                    Size="Size.Small"
                    Class="@(this.FormModel.IsFirst ? "invisible" : null)"
                    @onclick="this.OnGoToNextComponent"
                    aria-hidden="@this.FormModel.IsLast"
                    aria-label="@this.Loc["AriaLabel.Next"]"
                />
            </div>
            
            <MudIconButton
                Icon="@Icons.Material.Filled.Close"
                Size="Size.Small"
                @onclick="this.Close"
                aria-label="@this.Loc["AriaLabel.Close"]"
            />
        </div>

        <div class="form-container list-sidebar">
            <h2 class="form-title">
                @(!String.IsNullOrEmpty(this.FormTitle) || this.Episode is not null
                    ? this.FormTitle
                    : this.Loc["SpecialEpisodeForm.NewSpecialEpisode"])
            </h2>

            <div class="form">
                <div class="form-links">
                    @if (this.HasRottenTomatoesId())
                    {
                        string href = String.Format(
                            this.Loc["Link.RottenTomatoesUrlFormat"],
                            this.FormModel.RottenTomatoesId);

                        <MudLink Href="@href" Target="_blank">
                            @this.Loc["Link.RottenTomatoes"]
                        </MudLink>
                    }
                </div>
                
                <div class="form-checkboxes">
                    <MudCheckBox
                        Checked="@this.FormModel.IsWatched"
                        CheckedChanged="@((bool value) => this.OnIsWatchedChanged(value))"
                        Color="Color.Primary"
                        Disabled="@(!this.CanChangeIsWatched)"
                        Size="Size.Small"
                        Dense="true"
                    >
                        @this.Loc["SpecialEpisodeForm.IsWatched"]
                    </MudCheckBox>

                    <MudCheckBox
                        Checked="@this.FormModel.IsReleased"
                        CheckedChanged="@((bool value) => this.OnIsReleasedChanged(value))"
                        Color="Color.Primary"
                        Disabled="@(!this.CanChangeIsReleased)"
                        Size="Size.Small"
                        Dense="true"
                    >
                        @this.Loc["SpecialEpisodeForm.IsReleased"]
                    </MudCheckBox>
                </div>

                <TitlesForm
                    Titles="@this.FormModel.Titles"
                    Label="SpecialEpisodeForm.Title"
                    PropertyName="@nameof(this.FormModel.Titles)"
                />

                <TitlesForm
                    Titles="@this.FormModel.OriginalTitles"
                    Label="SpecialEpisodeForm.OriginalTitle"
                    PropertyName="@nameof(this.FormModel.OriginalTitles)"
                />
                
                <div>
                    <MudTextField
                        @bind-Value="@this.FormModel.Channel"
                        Label="@this.Loc["SpecialEpisodeForm.Channel"]"
                        Class="form-field"
                    />

                    <ErrorPresenter
                        ErrorCode="SpecialEpisode.Channel.*"
                        Trigger="@this.FormModel.Channel"
                    />
                </div>

                <div>
                    <MudDatePicker
                        Date="this.FormModel.Date"
                        DateChanged="@(date => this.OnMonthYearChanged(date))"
                        Label="@this.Loc["SpecialEpisodeForm.ReleaseMonthYear"]"
                        DateFormat="@this.Loc["SpecialEpisodeForm.MonthYearFormat"]"
                        MinDate="@(new DateTime(Constants.MinYear, 1, 1))"
                        DisableToolbar="true"
                        OpenTo="OpenTo.Month"
                        FixDay="1"
                        Adornment="Adornment.None"
                        Class="form-field"
                    />
                </div>

                <div>
                    <MudTextField
                        @bind-Value="@this.FormModel.RottenTomatoesId"
                        Label="@this.Loc["SpecialEpisodeForm.RottenTomatoesId"]"
                        Class="form-field"
                    />

                    <ErrorPresenter
                        ErrorCode="SpecialEpisode.RottenTomatoesId.*"
                        Trigger="@this.FormModel.RottenTomatoesId"
                    />
                </div>

                <div class="delete-container">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="@this.Delete">
                        @this.Loc["Button.Delete"]
                    </MudButton>
                </div>
            </div>

            <div class="form-actions">
                <MudButton
                    Color="Color.Primary"
                    Variant="Variant.Filled"
                    @onclick="@this.GoToSeries"
                >
                    @this.Loc["SpecialEpisodeForm.GoToSeries"]
                </MudButton>

                @if (this.FormModel.HasChanges)
                {
                    <MudButton
                        Color="Color.Surface"
                        Variant="Variant.Filled"
                        @onclick="@this.Cancel"
                    >
                        @this.Loc["Button.Cancel"]
                    </MudButton>
                }
            </div>
        </div>
    </div>
</FormParamsProvider>
