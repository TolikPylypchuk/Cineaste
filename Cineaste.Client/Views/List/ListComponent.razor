@inherits StatefulComponent<ListPageState>
@using MudBlazor

<div class="container">
    @if (this.State.Value.IsLoading)
    {
        <MudProgressCircular Indeterminate="true" Color="MudBlazor.Color.Primary" Size="Size.Large"
                             Class="loading-circle" />
    } else if (this.State.Value.Problem is not null)
    {
        <ApiProblemAlert Text="ListComponent.Problem.LoadingListFailed" Problem="@this.State.Value.Problem"
                         TryAgain="@this.FetchList" Class="problem-alert" />
    } else
    {
        var selectedItem = this.State.Value.SelectedItem;

        <MudDataGrid Class="list" Items="@this.State.Value.Container.Items" Virtualize="true" Hover="true"
                     SelectedItemChanged="@((ListItemModel item) => this.SelectItem(item))" SortMode="SortMode.None"
                     RowClassFunc="@((item, index) => "list-row" + (item == selectedItem ? " selected-row" : ""))"
                     RowStyleFunc="@((item, index) => $"--cell-color: {item.Color}")" FixedHeader="true" Height="100%"
                     ItemSize="64" Dense="true">
            <Columns>
                <MudBlazor.PropertyColumn Title="@this.Loc["ListComponent.List.Number"]"
                                          Property="@(item => item.DisplayNumber)" CellClass="cell-content number" />
                <MudBlazor.PropertyColumn Title="@this.Loc["ListComponent.List.Title"]"
                                          Property="@(item => item.Title)" CellClass="cell-content title" />
                <MudBlazor.PropertyColumn Title="@this.Loc["ListComponent.List.OriginalTitle"]"
                                          Property="@(item => item.OriginalTitle)" CellClass="cell-content title" />
                <MudBlazor.TemplateColumn Title="@this.Loc["ListComponent.List.Year"]" CellClass="cell-content year">
                    <CellTemplate>
                        @if (context.Item.StartYear == context.Item.EndYear)
                        {
                            @context.Item.StartYear
                        } else
                        {
                            @context.Item.StartYear
                            <br />
                            @context.Item.EndYear
                            @* @($"{context.Item.StartYear} - {context.Item.EndYear}") *@
                        }
                    </CellTemplate>
                </MudBlazor.TemplateColumn>
            </Columns>
        </MudDataGrid>
    }
</div>

@code {
    [Parameter]
    public EventCallback<ListItemModel> ItemSelected { get; set; }

    [Parameter]
    public required Action FetchList { get; set; }

    public async Task SelectItem(ListItemModel item)
    {
        if (item != this.State.Value.SelectedItem)
        {
            await this.ItemSelected.InvokeAsync(item);
        }
    }
}
