@page "/new"
@inherits CineasteForm<CreateListFormModel, CreateListRequest, object, CreateListPageState>
@using TooltipPosition = Microsoft.Fast.Components.FluentUI.TooltipPosition

<FormParamsProvider For="this">
    <div class="form-container">
        <h1 class="form-title">@this.Loc["CreateListPage.CreateList"]</h1>

        <div class="form-content">
            <FluentCard class="form-card">
                <h2 class="card-header">@this.Loc["CreateListPage.BasicInfo"]</h2>

                <div>
                    <FluentTextField @bind-Value="this.FormModel.Name" Class="form-field">
                        @this.Loc["CreateListPage.List.Name"]
                    </FluentTextField>

                    <ErrorPresenter ErrorCode="CreateList.Name.*" Trigger="@this.FormModel.Name" />
                </div>

                <div>
                    <FluentTextField Value="@this.FormModel.Handle" ValueExpression="@(() => this.FormModel.Handle)"
                                     Readonly="true" Class="form-field">
                        <div class="handle-label hint-container">
                            <p>@this.Loc["CreateListPage.List.Handle"]</p>

                            <div id="handle-help-icon">
                                <FluentIcon Name="@FluentIcons.QuestionCircle" Color="@Color.Info"
                                            Variant="@IconVariant.Regular" Size="IconSize.Size16" />
                            </div>

                            <FluentTooltip Anchor="handle-help-icon" Position="TooltipPosition.End">
                                @this.Loc["CreateListPage.Help.Handle"]
                            </FluentTooltip>
                        </div>
                    </FluentTextField>
                </div>

                <div>
                    <label for="language" class="label hint-container">
                        <p>@this.Loc["CreateListPage.List.TitleLanguage"]</p>

                        <div id="lang-help-icon">
                            <FluentIcon Name="@FluentIcons.QuestionCircle" Color="@Color.Info"
                                        Variant="@IconVariant.Regular" Size="IconSize.Size16" />
                        </div>

                        <FluentTooltip Anchor="lang-help-icon" Position="TooltipPosition.End">
                            @this.Loc["CreateListPage.Help.TitleLanguage"]
                        </FluentTooltip>
                    </label>

                    <FluentCombobox TOption="SimpleCultureModel" Id="language" Items="this.State.Value.AllCultures"
                                    OptionText="@(o => o.DisplayName)" Autocomplete="ComboboxAutocomplete.Inline"
                                    @bind-SelectedOption="this.FormModel.Culture" Class="form-field" />
                </div>
            </FluentCard>

            @if (this.State.Value.CulturesProblem is not null)
            {
                <ApiProblemAlert Text="@this.Loc["CreateListPage.Problem.Cultures"]" TryAgain="this.FetchCultures"
                                 Problem="this.State.Value.CulturesProblem" />
            }

            <FluentCard class="form-card">
                <div class="hint-container">
                    <h2 class="card-header">@this.Loc["CreateListPage.List.SeasonTitles"]</h2>

                    <div id="default-season-titles-help-icon">
                        <FluentIcon Name="@FluentIcons.QuestionCircle" Color="@Color.Info"
                                    Variant="@IconVariant.Regular" Size="IconSize.Size16" />
                    </div>

                    <FluentTooltip Anchor="default-season-titles-help-icon" Position="TooltipPosition.End">
                        @this.Loc["CreateListPage.Help.DefaultSeasonTitles"]
                    </FluentTooltip>
                </div>

                <div>
                    <FluentTextField @bind-Value="this.FormModel.DefaultSeasonTitle" Class="form-field">
                        @this.Loc["CreateListPage.List.DefaultSeasonTitle"]
                    </FluentTextField>

                    <ErrorPresenter ErrorCode="CreateList.DefaultSeasonTitle.*"
                                    Trigger="@this.FormModel.DefaultSeasonTitle" />
                </div>

                <div>
                    <FluentTextField @bind-Value="this.FormModel.DefaultSeasonOriginalTitle" Class="form-field">
                        @this.Loc["CreateListPage.List.DefaultSeasonOriginalTitle"]
                    </FluentTextField>

                    <ErrorPresenter ErrorCode="CreateList.DefaultSeasonOriginalTitle.*"
                                    Trigger="@this.FormModel.DefaultSeasonOriginalTitle" />
                </div>
            </FluentCard>

            <div class="action-panel">
                <FluentButton Appearance="Appearance.Outline" @onclick="@this.NavigateToHomePage">
                    @this.Loc["Button.Cancel"]
                </FluentButton>

                <FluentButton Appearance="Appearance.Accent" @onclick="@this.CreateList">
                    @this.Loc["Button.Create"]
                </FluentButton>
            </div>
        </div>

        @if (this.State.Value.IsCreatingList)
        {
            <FluentProgressRing Class="loading" />
        }

        @if (this.State.Value.CreateListProblem is not null)
        {
            <ApiProblemAlert Text="@this.Loc["CreateListPage.Problem.CreateList"]" ShowButton="false"
                             Problem="this.State.Value.CreateListProblem" Class="create-list-problem-alert" />
        }
    </div>
</FormParamsProvider>

@code {
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.FormModel = new();
        this.Dispatcher.Dispatch(new InitializeCreateListPageAction());
        this.FetchCultures();
    }

    private void FetchCultures() =>
        this.Dispatcher.Dispatch(new FetchCulturesAction());

    private void CreateList() =>
        this.WithValidation(request => this.Dispatcher.Dispatch(new CreateListAction(request)));

    private void NavigateToHomePage() =>
        this.PageNavigator.GoToHomePage();
}
