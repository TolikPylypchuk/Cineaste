@inherits CineasteComponent

<MudAlert Severity="Severity.Error" NoIcon="true" Class="@this.Class">
    <div class="summary-container">
        <p class="main-text">@this.Loc[this.Text]</p>

        <div class="button-panel">
            @if (this.Problem is not null && this.Problem.Detail is not null)
            {
                <MudButton
                    Variant="Variant.Text"
                    Size="Size.Small"
                    Color="Color.Error"
                    @onclick="this.ToggleOpened"
                >
                    @this.Loc[$"ApiProblemAlert.{(this.IsOpened ? "HideDetails" : "ShowDetails")}"]
                </MudButton>
            }

            @if (this.ShowButton)
            {
                <MudButton
                    Variant="Variant.Text"
                    Size="Size.Small"
                    Color="Color.Error"
                    @onclick="this.TryAgain"
                >
                    @this.Loc[this.ButtonText]
                </MudButton>
            }
        </div>
    </div>

    @if (this.Problem is not null && this.Problem.Detail is not null && this.IsOpened)
    {
        <MudDivider Class="details-divider" DividerType="DividerType.FullWidth"></MudDivider>
        <p class="details-container">
            <span class="details">@this.Loc[this.Problem.Detail]</span>
            <MudLink Class="details-link" Href="@this.Problem.Type" Target="_blank">
                @this.Problem.Status @this.Problem.Title
            </MudLink>
        </p>
    }
</MudAlert>

@code {
    [Parameter]
    public ProblemDetails? Problem { get; set; }

    [Parameter]
    public string Text { get; set; } = String.Empty;

    [Parameter]
    public string ButtonText { get; set; } = "ApiProblemAlert.TryAgain";

    [Parameter]
    public bool ShowButton { get; set; } = true;

    [Parameter]
    public EventCallback TryAgain { get; set; }

    [Parameter]
    public string Class { get; set; } = String.Empty;

    private bool IsOpened { get; set; }

    private void ToggleOpened() =>
        this.IsOpened = !this.IsOpened;
}
