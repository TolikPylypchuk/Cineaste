@page "/"
@inherits StatefulComponent<HomePageState>

<div class="container d-flex flex-column align-items-center h-100">
    <div class="d-flex flex-column align-items-center flex-shrink-0">
        <h1 class="display-1 mt-md-2 mt-1">@this.Loc["Cineaste"]</h1>

        <h2 class="display-5 mt-2">@this.Loc["HomePage.MyLists"]</h2>

        <RadzenButton Text="@this.Loc["HomePage.CreateList"]" Icon="add_circle_outline" class="mt-4"
                      ButtonStyle="ButtonStyle.Primary" Click="this.NavigateToCreateList" />
    </div>

    @if (this.State.Value.IsLoading)
    {
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="w-25 mt-4" />
    } else if (this.State.Value.Problem is not null)
    {
        <ApiProblemAlert Problem="this.State.Value.Problem" Text="Loading lists has failed" TryAgain="this.FetchLists"
                         Class="w-50 mt-3" />
    } else
    {
        <RadzenDataList WrapItems="true" Data="this.State.Value.Lists" TItem="SimpleListModel"
                        class="mt-4 overflow-auto">
            <Template Context="list">
                <div role="button" class="container border-bottom" style="border: none; border-radius: 0;"
                        @ondblclick=@(() => this.NavigateToList(list.Handle))>
                    <div class="row">
                        <p class="lead m-1">@list.Name</p>
                    </div>
                </div>
            </Template>
        </RadzenDataList>
    }
</div>

@code {
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.FetchLists();
    }

    private void NavigateToCreateList() =>
        this.PageNavigator.GoToCreateListPage();

    private void NavigateToList(string handle) =>
        this.PageNavigator.GoToListPage(handle);

    private void FetchLists() =>
        this.Dispatcher.Dispatch(new FetchListsAction());
}
