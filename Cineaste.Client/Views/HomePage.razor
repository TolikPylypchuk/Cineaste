@page "/"
@inherits StatefulComponent<HomePageState>

<div class="container">
    <header>
        <h1 class="title">@this.Loc["Cineaste"]</h1>
        <h2 class="subtitle">@this.Loc["HomePage.MyLists"]</h2>

        <FluentButton Class="create-list" Appearance="Appearance.Accent" @onclick="this.NavigateToCreateList">
            @this.Loc["HomePage.CreateList"]
        </FluentButton>
    </header>

    @if (this.State.Value.IsLoading)
    {
        <FluentProgressRing Class="loading" />
    } else if (this.State.Value.Problem is not null)
    {
        <ApiProblemAlert Problem="this.State.Value.Problem" Text="@this.Loc["HomePage.Problem.LoadingListsFailed"]"
                         TryAgain="this.FetchLists" Class="problem-alert" />
    } else
    {
        <div class="lists">
            @foreach (var list in this.State.Value.Lists)
            {
                <div role="button" class="list-container" @ondblclick="@(() => this.NavigateToList(list))">
                    <p class="list">@list.Name</p>
                </div>
            }
        </div>
    }
</div>

@code {
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.FetchLists();
    }

    private void NavigateToCreateList() =>
        this.PageNavigator.GoToCreateListPage();

    private void NavigateToList(SimpleListModel list) =>
        this.PageNavigator.GoToListPage(list.Handle);

    private void FetchLists() =>
        this.Dispatcher.Dispatch(new FetchListsAction());
}
