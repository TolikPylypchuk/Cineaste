@page "/list/{handle}"

@inherits ReactiveInjectableComponentBase<ListPageViewModel>

<div class="container d-flex flex-column align-items-center">
    <RemoteContent ViewModel="this.ViewModel!.GetListCall">
        <Loading>
            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="w-25 mt-4" />
        </Loading>

        <Content>
            <h1 class="display-3 mt-md-2 mt-1">@this.ViewModel!.List.Name</h1>

            <RadzenDataList WrapItems="true" Data="@this.ViewModel!.Items" TItem="ListItemModel" class="mt-4">
                <Template Context="item">
                    <div role="button" class="container border-bottom"
                            style=@($"border: none; border-radius: 0; color: {item.Color};")>
                        <div class="d-flex flex-row">
                            <p class="lead text-start m-1" style="width: 50px">
                                @item.DisplayNumber
                            </p>

                            <p class="lead text-center m-1" style="width: calc((100% - 175px) / 2)">
                                @item.Title
                            </p>

                            <p class="lead text-center m-1" style="width: calc((100% - 175px) / 2)">
                                @item.OriginalTitle
                            </p>

                            <p class="lead text-end m-1" style="width: 125px">
                                @item.Years
                            </p>
                        </div>
                    </div>
                </Template>
            </RadzenDataList>
        </Content>

        <Problem Context="problem">
            <ApiProblemAlert Text=@(problem.Status == 404
                                ? "The list wasn't found - please check that the URL is correct"
                                : "Loading the list has failed") Problem="problem" Class="w-50 mt-3"
                             TryAgain=@(() => this.ViewModel!.Initialize(this.Handle)) />
        </Problem>
    </RemoteContent>
</div>

@code {
    [Parameter]
    public string Handle { get; set; } = String.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await this.ViewModel!.Initialize(this.Handle);
    }
}
