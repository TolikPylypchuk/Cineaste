@page "/list/{handle}"

@inherits ReactiveInjectableComponentBase<ListPageViewModel>

<div class="container d-flex flex-column align-items-center">
    @if (this.ViewModel!.IsLoading)
    {
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="w-25 mt-4" />
    } else
    {
        @if (this.ViewModel!.List is not null)
        {
            <h1 class="display-3 mt-md-2 mt-1">@this.ViewModel!.List.Name</h1>

            <RadzenDataList WrapItems="true" Data="@this.ViewModel!.Items" TItem="ListItemModel" class="mt-4">
                <Template Context="item">
                    <div role="button" class="container border-bottom"
                         style=@($"border: none; border-radius: 0; color: {item.Color};")>
                        <div class="d-flex flex-row">
                            <p class="lead text-start m-1" style="width: 50px">
                                @item.DisplayNumber
                            </p>

                            <p class="lead text-center m-1" style="width: calc((100% - 175px) / 2)">
                                @item.Title
                            </p>

                            <p class="lead text-center m-1" style="width: calc((100% - 175px) / 2)">
                                @item.OriginalTitle
                            </p>

                            <p class="lead text-end m-1" style="width: 125px">
                                @item.Years
                            </p>
                        </div>
                    </div>
                </Template>
            </RadzenDataList>
        } else
        {
            <p class="lead m-4">The list couldn't be loaded. Please check that the URL is correct.</p>
        }
    }
</div>

@code {
    [Parameter]
    public string Handle { get; set; } = String.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        this.ViewModel!.Handle = this.Handle;

        await this.ViewModel!.Initialize();
    }
}
