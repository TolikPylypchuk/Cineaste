@page "/"

@inherits ReactiveInjectableComponentBase<HomePageViewModel>

<div class="container d-flex flex-column align-items-center">
    <h1 class="display-1 mt-md-2 mt-1">Cineaste</h1>

    <h2 class="display-5 mt-2">My Lists</h2>

    <RadzenButton Text="Create a list" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" class="mt-4"
                  Click=@(() => this.ViewModel!.NavigateToCreateList()) />

    @if (this.ViewModel!.IsLoading)
    {
        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" class="w-25 mt-4" />
    } else if (!this.ViewModel!.LoadingFailed)
    {
        <RadzenDataList WrapItems="true" Data="this.ViewModel!.Lists" TItem="SimpleListModel" class="mt-4">
            <Template Context="list">
                <div role="button" class="container border-bottom" style="border: none; border-radius: 0;"
                     @ondblclick=@(() => this.ViewModel!.NavigateToList(list))>
                    <div class="row">
                        <p class="lead m-1">@list.Name</p>
                    </div>
                </div>
            </Template>
        </RadzenDataList>
    } else
    {
        <div class="alert alert-danger w-50 mt-3">
            <div class="d-flex flex-row justify-content-between align-items-center">
                <p class="m-1">Loading lists has failed</p>
                <RadzenButton Text="Try again" Click="this.ViewModel!.LoadLists" class="m-1"
                              ButtonStyle="ButtonStyle.Danger" />
            </div>
        </div>
    }
</div>

@code {
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await this.ViewModel!.LoadLists();
    }
}
